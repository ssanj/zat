name: linux release
on: push
  # push:
    # tags:
    #   - "v*"


jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: (${{ matrix.target }}-${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        target: [
          x86_64-unknown-linux-gnu,
        ]

    steps:
    - name: checkout
      uses: actions/checkout@v2

      # Run build
    - name: install rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
        sh rustup-init.sh -y --default-toolchain none
        rustup target add ${{ matrix.target }}
    - name: build
      id: release-build
      run: |
        rustc -Vv
        cargo -V
        cargo build --release
        ZAT_VERSION=$(target/release/zat -V | cut -d' ' -f2)
        echo "RELEASE_ARTIFACT_NAME=target/release/zat" >> "$GITHUB_OUTPUT"
        echo "ARTIFACT_NAME=target/release/zat-$ZAT_VERSION-${{ matrix.os }}-${{ matrix.target }}" >> "$GITHUB_OUTPUT"

    - name: copy-artifact
      id: copy-artifact
      run: |
        echo "RELEASE_ARTIFACT_NAME: ${{ steps.release-build.outputs.RELEASE_ARTIFACT_NAME }}"
        echo "ARTIFACT_NAME: ${{ steps.release-build.outputs.ARTIFACT_NAME }}"
        cp "${{ steps.release-build.outputs.RELEASE_ARTIFACT_NAME }}" "$${{ steps.release-build.outputs.ARTIFACT_NAME }}"

    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: "${{ steps.copy-artifact.outputs.ARTIFACT_NAME }}"
