name: linux release
on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    name: (${{ matrix.target }}-${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        target: [
          x86_64-unknown-linux-gnu
        ]

    steps:
    - name: Checkout zat
      uses: actions/checkout@v4

      # Run build
    - name: Install rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
        sh rustup-init.sh -y --default-toolchain none
        rustup target add ${{ matrix.target }}
    - name: build
      id: release-build
      run: |
        rustc -Vv
        cargo -V
        echo "$PWD"
        cargo build --release --target ${{ matrix.target }}  --target-dir "$PWD/target"
        RELEASE_DIR="$PWD/target/${{ matrix.target }}/release"
        RELEASE_EXEC="$RELEASE_DIR/zat"
        echo "RELEASE_DIR: $RELEASE_DIR"
        echo "RELEASE_EXEC: $RELEASE_EXEC"
        ZAT_VERSION=$($RELEASE_EXEC -V | cut -d' ' -f2)
        echo "ARTIFACT_NAME=$RELEASE_EXEC" >> "$GITHUB_ENV"
        echo "RELEASE_ARTIFACT_NAME=$RELEASE_EXEC-$ZAT_VERSION-${{ matrix.os }}-${{ matrix.target }}" >> "$GITHUB_ENV"

    - name: Copy Artifact
      id: copy-artifact
      run: |
        echo "RELEASE_ARTIFACT_NAME: $RELEASE_ARTIFACT_NAME"
        echo "ARTIFACT_NAME: $ARTIFACT_NAME"
        cp "$ARTIFACT_NAME" "$RELEASE_ARTIFACT_NAME"

    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: ${{ env.RELEASE_ARTIFACT_NAME }}
